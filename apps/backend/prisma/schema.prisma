// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  properties Property[]
  inquiries  Inquiry[]

  @@index([email])
}

model Property {
  id          String         @id @default(uuid())
  title       String
  description String?
  price       Float
  location    String
  address     String?
  type        PropertyType
  status      PropertyStatus @default(AVAILABLE)
  bedrooms    Int?
  bathrooms   Int?
  area        Float?
  images      String[]
  features    String[]
  badge       String?
  userId      String?
  user        User?          @relation(fields: [userId], references: [id], onDelete: SetNull)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  inquiries Inquiry[]

  @@index([type, status])
  @@index([price])
  @@index([location])
}

model Inquiry {
  id         String   @id @default(uuid())
  name       String
  email      String
  phone      String?
  message    String
  propertyId String?
  property   Property? @relation(fields: [propertyId], references: [id], onDelete: SetNull)
  userId     String?
  user       User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  status     InquiryStatus @default(NEW)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([email])
  @@index([status])
}

enum UserRole {
  USER
  AGENT
  ADMIN
}

enum PropertyType {
  HOUSE
  APARTMENT
  CONDO
  COMMERCIAL
  LAND
}

enum PropertyStatus {
  AVAILABLE
  PENDING
  SOLD
  RENTED
}

enum InquiryStatus {
  NEW
  CONTACTED
  IN_PROGRESS
  CLOSED
}
